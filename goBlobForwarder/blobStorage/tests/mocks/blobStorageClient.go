// Code generated by MockGen. DO NOT EDIT.
// Source: blobStorageClient.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAzureStorageClient is a mock of AzureStorageClient interface.
type MockAzureStorageClient struct {
	ctrl     *gomock.Controller
	recorder *MockAzureStorageClientMockRecorder
}

// MockAzureStorageClientMockRecorder is the mock recorder for MockAzureStorageClient.
type MockAzureStorageClientMockRecorder struct {
	mock *MockAzureStorageClient
}

// NewMockAzureStorageClient creates a new mock instance.
func NewMockAzureStorageClient(ctrl *gomock.Controller) *MockAzureStorageClient {
	mock := &MockAzureStorageClient{ctrl: ctrl}
	mock.recorder = &MockAzureStorageClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAzureStorageClient) EXPECT() *MockAzureStorageClientMockRecorder {
	return m.recorder
}

// DownloadBlobLogContent mocks base method.
func (m *MockAzureStorageClient) DownloadBlobLogContent(blobName, blobContainer string) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DownloadBlobLogContent", blobName, blobContainer)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DownloadBlobLogContent indicates an expected call of DownloadBlobLogContent.
func (mr *MockAzureStorageClientMockRecorder) DownloadBlobLogContent(blobName, blobContainer interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DownloadBlobLogContent", reflect.TypeOf((*MockAzureStorageClient)(nil).DownloadBlobLogContent), blobName, blobContainer)
}

// DownloadBlobLogWithOffset mocks base method.
func (m *MockAzureStorageClient) DownloadBlobLogWithOffset(blobName, blobContainer string, byteRange int64) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DownloadBlobLogWithOffset", blobName, blobContainer, byteRange)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DownloadBlobLogWithOffset indicates an expected call of DownloadBlobLogWithOffset.
func (mr *MockAzureStorageClientMockRecorder) DownloadBlobLogWithOffset(blobName, blobContainer, byteRange interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DownloadBlobLogWithOffset", reflect.TypeOf((*MockAzureStorageClient)(nil).DownloadBlobLogWithOffset), blobName, blobContainer, byteRange)
}

// GetLogContainers mocks base method.
func (m *MockAzureStorageClient) GetLogContainers() ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLogContainers")
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLogContainers indicates an expected call of GetLogContainers.
func (mr *MockAzureStorageClientMockRecorder) GetLogContainers() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLogContainers", reflect.TypeOf((*MockAzureStorageClient)(nil).GetLogContainers))
}

// GetLogsFromBlobContainers mocks base method.
func (m *MockAzureStorageClient) GetLogsFromBlobContainers() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLogsFromBlobContainers")
	ret0, _ := ret[0].(error)
	return ret0
}

// GetLogsFromBlobContainers indicates an expected call of GetLogsFromBlobContainers.
func (mr *MockAzureStorageClientMockRecorder) GetLogsFromBlobContainers() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLogsFromBlobContainers", reflect.TypeOf((*MockAzureStorageClient)(nil).GetLogsFromBlobContainers))
}

// GetLogsFromDefaultBlobContainers mocks base method.
func (m *MockAzureStorageClient) GetLogsFromDefaultBlobContainers() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLogsFromDefaultBlobContainers")
	ret0, _ := ret[0].(error)
	return ret0
}

// GetLogsFromDefaultBlobContainers indicates an expected call of GetLogsFromDefaultBlobContainers.
func (mr *MockAzureStorageClientMockRecorder) GetLogsFromDefaultBlobContainers() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLogsFromDefaultBlobContainers", reflect.TypeOf((*MockAzureStorageClient)(nil).GetLogsFromDefaultBlobContainers))
}

// GetLogsFromSpecificBlobContainer mocks base method.
func (m *MockAzureStorageClient) GetLogsFromSpecificBlobContainer(containerName string) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLogsFromSpecificBlobContainer", containerName)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLogsFromSpecificBlobContainer indicates an expected call of GetLogsFromSpecificBlobContainer.
func (mr *MockAzureStorageClientMockRecorder) GetLogsFromSpecificBlobContainer(containerName interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLogsFromSpecificBlobContainer", reflect.TypeOf((*MockAzureStorageClient)(nil).GetLogsFromSpecificBlobContainer), containerName)
}

// GoGetLogContainers mocks base method.
func (m *MockAzureStorageClient) GoGetLogContainers() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GoGetLogContainers")
	ret0, _ := ret[0].(error)
	return ret0
}

// GoGetLogContainers indicates an expected call of GoGetLogContainers.
func (mr *MockAzureStorageClientMockRecorder) GoGetLogContainers() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GoGetLogContainers", reflect.TypeOf((*MockAzureStorageClient)(nil).GoGetLogContainers))
}

// GoGetLogsFromChannelContainer mocks base method.
func (m *MockAzureStorageClient) GoGetLogsFromChannelContainer() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GoGetLogsFromChannelContainer")
	ret0, _ := ret[0].(error)
	return ret0
}

// GoGetLogsFromChannelContainer indicates an expected call of GoGetLogsFromChannelContainer.
func (mr *MockAzureStorageClientMockRecorder) GoGetLogsFromChannelContainer() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GoGetLogsFromChannelContainer", reflect.TypeOf((*MockAzureStorageClient)(nil).GoGetLogsFromChannelContainer))
}
