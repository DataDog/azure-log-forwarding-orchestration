// Code generated by MockGen. DO NOT EDIT.
// Source: pii_scrubber.go
// Generated by this command:
//
//	mockgen -package=mocks -source=pii_scrubber.go -destination=mocks/mock_pii_scrubber.go
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockScrubber is a mock of Scrubber interface.
type MockScrubber struct {
	ctrl     *gomock.Controller
	recorder *MockScrubberMockRecorder
}

// MockScrubberMockRecorder is the mock recorder for MockScrubber.
type MockScrubberMockRecorder struct {
	mock *MockScrubber
}

// NewMockScrubber creates a new mock instance.
func NewMockScrubber(ctrl *gomock.Controller) *MockScrubber {
	mock := &MockScrubber{ctrl: ctrl}
	mock.recorder = &MockScrubberMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockScrubber) EXPECT() *MockScrubberMockRecorder {
	return m.recorder
}

// Scrub mocks base method.
func (m *MockScrubber) Scrub(logBytes []byte) []byte {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Scrub", logBytes)
	ret0, _ := ret[0].([]byte)
	return ret0
}

// Scrub indicates an expected call of Scrub.
func (mr *MockScrubberMockRecorder) Scrub(logBytes interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Scrub", reflect.TypeOf((*MockScrubber)(nil).Scrub), logBytes)
}
