{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "ddApiKey": {
            "type": "securestring",
            "metadata": {
                "description": "Datadog API Key"
            }
        },
        "ddAppKey": {
            "type": "securestring",
            "metadata": {
                "description": "Datadog App Key"
            }
        }
    },
    "functions": [],
    "variables": {
        // resources
        "lfoId": "[toLower(substring(guid('lfo', deployment().name), 24, 12))]",
        "aspName": "[concat('control-plane-asp-', variables('lfoId'))]",
        "aspId": "[resourceId('Microsoft.Web/serverfarms', variables('aspName'))]",
        "storageAccountName": "[concat('lfostorage', variables('lfoId'))]",
        "storageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "resourceTaskName": "[concat('resources-task-', variables('lfoId'))]",
        "resourceTaskId": "[resourceId('Microsoft.Web/sites', variables('resourceTaskName'))]",
        "diagnosticSettingsTaskName": "[concat('diagnostic-settings-task-', variables('lfoId'))]",
        "diagnosticSettingsTaskId": "[resourceId('Microsoft.Web/sites', variables('diagnosticSettingsTaskName'))]",
        "scalingTaskName": "[concat('scaling-task-', variables('lfoId'))]",
        "scalingTaskId": "[resourceId('Microsoft.Web/sites', variables('scalingTaskName'))]",
        // roles
        "contributorRole": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
        "monitoringReaderRole": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '749f88d5-cbae-40b8-bcfc-e573ddc772fa')]",
        "monitoringContributorRole": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '749f88d5-cbae-40b8-bcfc-e573ddc772fa')]",
        "storageBlobDataContributorRole": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]"
    },
    "resources": [
        {
            "name": "[variables('aspName')]",
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2022-09-01",
            "location": "[resourceGroup().location]",
            "kind": "linux",
            "properties": {
                "name": "[variables('aspName')]",
                "workerSize": 0,
                "workerSizeId": 0,
                "numberOfWorkers": 1,
                "reserved": true
            },
            "sku": {
                "Tier": "Dynamic",
                "Name": "Y1"
            }
        },
        {
            "name": "[variables('storageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2023-01-01",
            "tags": {
                "displayName": "[variables('storageAccountName')]"
            },
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS"
            },
            "properties": {
                "accountType": "BlobStorage"
            }
        },
        {
            "name": "[variables('resourceTaskName')]",
            "type": "Microsoft.Web/sites",
            "apiVersion": "2022-09-01",
            "location": "[resourceGroup().location]",
            "kind": "functionapp",
            "identity": {
                "type": "SystemAssigned"
            },
            "dependsOn": [
                "[variables('aspId')]",
                "[variables('storageAccountId')]"
            ],
            "properties": {
                "serverFarmId": "[variables('aspId')]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountId'), '2019-06-01').keys[0].value)]"
                        },
                        {
                            "name": "AzureWebJobsFeatureFlags",
                            "value": "EnableWorkerIndexing"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~4"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "python"
                        }
                    ],
                    "linuxFxVersion": "Python|3.11"
                },
                "publicNetworkAccess": "Disabled",
                "httpsOnly": true
            }
        },
        {
            "name": "[guid(variables('resourceTaskId'), deployment().name)]",
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            // "scope": "[subscription().id]", TODO(AZINTS-2745) this scope should be management group level
            "properties": {
                "roleDefinitionId": "[variables('monitoringReaderRole')]",
                "principalId": "[reference(variables('resourceTaskId'), '2022-09-01', 'full').identity.principalId]"
            },
            "dependsOn": [ "[variables('resourceTaskId')]" ]
        },
        {
            "name": "[variables('diagnosticSettingsTaskName')]",
            "type": "Microsoft.Web/sites",
            "apiVersion": "2022-09-01",
            "location": "[resourceGroup().location]",
            "kind": "functionapp",
            "identity": {
                "type": "SystemAssigned"
            },
            "dependsOn": [
                "[variables('aspId')]",
                "[variables('storageAccountId')]"
            ],
            "properties": {
                "serverFarmId": "[variables('aspId')]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountId'), '2019-06-01').keys[0].value)]"
                        },
                        {
                            "name": "AzureWebJobsFeatureFlags",
                            "value": "EnableWorkerIndexing"
                        },
                        {
                            "name": "RESOURCE_GROUP",
                            "value": "[resourceGroup().name]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~4"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "python"
                        }
                    ],
                    "linuxFxVersion": "Python|3.11"
                },
                "publicNetworkAccess": "Disabled",
                "httpsOnly": true
            }
        },
        {
            "name": "[guid('monitor', variables('diagnosticSettingsTaskId'), deployment().name)]",
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            // "scope": "[subscription().id]", TODO(AZINTS-2745) this scope should be management group level
            "properties": {
                "roleDefinitionId": "[variables('monitoringContributorRole')]",
                "principalId": "[reference(variables('diagnosticSettingsTaskId'), '2022-09-01', 'full').identity.principalId]"
            },
            "dependsOn": [ "[variables('diagnosticSettingsTaskId')]" ]
        },
        {
            "name": "[guid('storage', variables('diagnosticSettingsTaskId'), deployment().name)]",
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            // "scope": "[subscription().id]", TODO(AZINTS-2745) this scope should be management group level
            "properties": {
                "roleDefinitionId": "[variables('storageBlobDataContributorRole')]",
                "principalId": "[reference(variables('diagnosticSettingsTaskId'), '2022-09-01', 'full').identity.principalId]"
            },
            "dependsOn": [ "[variables('diagnosticSettingsTaskId')]" ]
        },
        {
            "name": "[variables('scalingTaskName')]",
            "type": "Microsoft.Web/sites",
            "apiVersion": "2022-09-01",
            "location": "[resourceGroup().location]",
            "kind": "functionapp",
            "identity": {
                "type": "SystemAssigned"
            },
            "dependsOn": [
                "[variables('aspId')]",
                "[variables('storageAccountId')]"
            ],
            "properties": {
                "serverFarmId": "[variables('aspId')]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountId'), '2019-06-01').keys[0].value)]"
                        },
                        {
                            "name": "AzureWebJobsFeatureFlags",
                            "value": "EnableWorkerIndexing"
                        },
                        {
                            "name": "RESOURCE_GROUP",
                            "value": "[resourceGroup().name]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~4"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "python"
                        },
                        {
                            "name": "forwarder_image",
                            "value": "mattlogger.azurecr.io/forwarder:latest"
                        },
                        {
                            "name": "DD_API_KEY",
                            "value": "[parameters('ddApiKey')]"
                        },
                        {
                            "name": "DD_APP_KEY",
                            "value": "[parameters('ddAppKey')]"
                        }
                    ],
                    "linuxFxVersion": "Python|3.11"
                },
                "publicNetworkAccess": "Disabled",
                "httpsOnly": true
            }
        },
        {
            "name": "[guid(variables('scalingTaskId'), deployment().name)]",
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            // defaults to resource group scope TODO(AZINTS-2745) ensure it remains at the resource group level
            "properties": {
                "roleDefinitionId": "[variables('contributorRole')]",
                "principalId": "[reference(variables('scalingTaskId'), '2022-09-01', 'full').identity.principalId]"
            },
            "dependsOn": [ "[variables('scalingTaskId')]" ]
        }
    ],
    "outputs": {}
}
