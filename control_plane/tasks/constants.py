from collections.abc import Mapping
from itertools import chain
from typing import Final

# https://learn.microsoft.com/en-us/azure/azure-monitor/reference/supported-logs/logs-index
UNNESTED_VALID_RESOURCE_TYPES: Final[frozenset[str]] = frozenset(
    {
        "microsoft.aad/domainservices",
        "microsoft.agfoodplatform/farmbeats",
        "microsoft.analysisservices/servers",
        "microsoft.apimanagement/service",
        "microsoft.app/managedenvironments",
        "microsoft.appconfiguration/configurationstores",
        "microsoft.appplatform/spring",
        "microsoft.attestation/attestationproviders",
        "microsoft.automation/automationaccounts",
        "microsoft.autonomousdevelopmentplatform/accounts",
        "microsoft.autonomousdevelopmentplatform/workspaces",
        "microsoft.avs/privateclouds",
        "microsoft.azureplaywrightservice/accounts",
        "microsoft.azuresphere/catalogs",
        "microsoft.batch/batchaccounts",
        "microsoft.botservice/botservices",
        "microsoft.cache/redis",
        "microsoft.cdn/cdnwebapplicationfirewallpolicies",
        "microsoft.cdn/profiles",
        "microsoft.chaos/experiments",
        "microsoft.classicnetwork/networksecuritygroups",
        "microsoft.codesigning/codesigningaccounts",
        "microsoft.cognitiveservices/accounts",
        "microsoft.communication/communicationservices",
        "microsoft.community/communitytrainings",
        "microsoft.compute/virtualmachines",
        "microsoft.confidentialledger/managedccf",
        "microsoft.confidentialledger/managedccfs",
        "microsoft.connectedcache/cachenodes",
        "microsoft.connectedcache/enterprisemcccustomers",
        "microsoft.connectedcache/ispcustomers",
        "microsoft.connectedvehicle/platformaccounts",
        "microsoft.containerinstance/containergroups",
        "microsoft.containerregistry/registries",
        "microsoft.containerservice/fleets",
        "microsoft.containerservice/managedclusters",
        "microsoft.customproviders/resourceproviders",
        "microsoft.d365customerinsights/instances",
        "microsoft.dashboard/grafana",
        "microsoft.databricks/workspaces",
        "microsoft.datafactory/factories",
        "microsoft.datalakeanalytics/accounts",
        "microsoft.datalakestore/accounts",
        "microsoft.dataprotection/backupvaults",
        "microsoft.datashare/accounts",
        "microsoft.dbformariadb/servers",
        "microsoft.dbformysql/flexibleservers",
        "microsoft.dbformysql/servers",
        "microsoft.dbforpostgresql/flexibleservers",
        "microsoft.dbforpostgresql/servergroupsv2",
        "microsoft.dbforpostgresql/servers",
        "microsoft.dbforpostgresql/serversv2",
        "microsoft.desktopvirtualization/appattachpackages",
        "microsoft.desktopvirtualization/applicationgroups",
        "microsoft.desktopvirtualization/hostpools",
        "microsoft.desktopvirtualization/scalingplans",
        "microsoft.desktopvirtualization/workspaces",
        "microsoft.devcenter/devcenters",
        "microsoft.devices/iothubs",
        "microsoft.devices/provisioningservices",
        "microsoft.devopsinfrastructure/pools",
        "microsoft.digitaltwins/digitaltwinsinstances",
        "microsoft.documentdb/cassandraclusters",
        "microsoft.documentdb/databaseaccounts",
        "microsoft.documentdb/mongoclusters",
        "microsoft.eventgrid/domains",
        "microsoft.eventgrid/namespaces",
        "microsoft.eventgrid/partnernamespaces",
        "microsoft.eventgrid/partnertopics",
        "microsoft.eventgrid/systemtopics",
        "microsoft.eventgrid/topics",
        "microsoft.eventhub/namespaces",
        "microsoft.hardwaresecuritymodules/cloudhsmclusters",
        "microsoft.healthcareapis/services",
        "microsoft.healthdataaiservices/deidservices",
        "microsoft.insights/autoscalesettings",
        "microsoft.insights/components",
        "microsoft.insights/datacollectionrules",
        "microsoft.keyvault/managedhsms",
        "microsoft.keyvault/vaults",
        "microsoft.kubernetes/connectedclusters",
        "microsoft.kusto/clusters",
        "microsoft.loadtestservice/loadtests",
        "microsoft.logic/integrationaccounts",
        "microsoft.logic/workflows",
        "microsoft.machinelearningservices/registries",
        "microsoft.machinelearningservices/workspaces",
        "microsoft.managednetworkfabric/networkdevices",
        "microsoft.media/mediaservices",
        "microsoft.media/videoanalyzers",
        "microsoft.monitor/accounts",
        "microsoft.network/applicationgateways",
        "microsoft.network/azurefirewalls",
        "microsoft.network/bastionhosts",
        "microsoft.network/dnsresolverpolicies",
        "microsoft.network/expressroutecircuits",
        "microsoft.network/frontdoors",
        "microsoft.network/loadbalancers",
        "microsoft.network/networkmanagers",
        "microsoft.network/networksecuritygroups",
        "microsoft.network/networksecurityperimeters",
        "microsoft.network/p2svpngateways",
        "microsoft.network/publicipaddresses",
        "microsoft.network/publicipprefixes",
        "microsoft.network/trafficmanagerprofiles",
        "microsoft.network/virtualnetworkgateways",
        "microsoft.network/virtualnetworks",
        "microsoft.network/vpngateways",
        "microsoft.networkanalytics/dataproducts",
        "microsoft.networkcloud/baremetalmachines",
        "microsoft.networkcloud/clustermanagers",
        "microsoft.networkcloud/clusters",
        "microsoft.networkcloud/storageappliances",
        "microsoft.networkfunction/azuretrafficcollectors",
        "microsoft.notificationhubs/namespaces",
        "microsoft.openenergyplatform/energyservices",
        "microsoft.openlogisticsplatform/workspaces",
        "microsoft.operationalinsights/workspaces",
        "microsoft.playfab/titles",
        "microsoft.powerbi/tenants",
        "microsoft.powerbidedicated/capacities",
        "microsoft.providerhub/providermonitorsettings",
        "microsoft.providerhub/providerregistrations",
        "microsoft.purview/accounts",
        "microsoft.recoveryservices/vaults",
        "microsoft.relay/namespaces",
        "microsoft.search/searchservices",
        "microsoft.security/antimalwaresettings",
        "microsoft.security/defenderforstoragesettings",
        "microsoft.servicebus/namespaces",
        "microsoft.servicenetworking/trafficcontrollers",
        "microsoft.signalrservice/signalr",
        "microsoft.signalrservice/webpubsub",
        "microsoft.singularity/accounts",
        "microsoft.sql/managedinstances",
        "microsoft.storagecache/amlfilesystems",
        "microsoft.storagecache/caches",
        "microsoft.storagemover/storagemovers",
        "microsoft.streamanalytics/streamingjobs",
        "microsoft.synapse/workspaces",
        "microsoft.videoindexer/accounts",
        "microsoft.web/hostingenvironments",
        "microsoft.web/sites",
        "microsoft.web/staticsites",
        "microsoft.workloads/sapvirtualinstances",
        "nginx.nginxplus/nginxdeployment",
    }
)

# resource type to their sub-types
NESTED_VALID_RESOURCE_TYPES: Final[Mapping[str, set[str]]] = {
    "microsoft.azuredatatransfer/connections": {"flows"},
    "microsoft.cache/redisenterprise": {"databases"},
    "microsoft.cdn/profiles": {"endpoints"},
    "microsoft.healthcareapis/workspaces": {"dicomservices", "fhirservices", "iotconnectors"},
    "microsoft.machinelearningservices/workspaces": {"onlineendpoints"},
    "microsoft.media/mediaservices": {"liveevents", "streamingendpoints"},
    "microsoft.netapp/netappaccounts": {
        "capacitypools",
        "capacitypools/volumes",  # this is also a doubly nested subtype but i dont wanna deal with that rn
    },
    "microsoft.network/networksecurityperimeters": {"profiles"},
    "microsoft.network/networkmanagers": {"ipampools"},
    "microsoft.notificationhubs/namespaces": {"notificationhubs"},
    "microsoft.powerbi/tenants": {"workspaces"},
    "microsoft.signalrservice/signalr": {"replicas"},
    "microsoft.signalrservice/webpubsub": {"replicas"},
    "microsoft.storage/storageaccounts": {"blobservices", "fileservices", "queueservices", "tableservices"},
    "microsoft.sql/servers": {"databases"},
    "microsoft.sql/managedinstances": {"databases"},
    "microsoft.synapse/workspaces": {"bigdatapools", "kustopools", "scopepools", "sqlpools"},
    "microsoft.web/sites": {"slots"},
}

FETCHED_RESOURCE_TYPES: Final = frozenset(chain(UNNESTED_VALID_RESOURCE_TYPES, NESTED_VALID_RESOURCE_TYPES))


# Azure Product Region Availability
# Overview: https://azure.microsoft.com/en-us/explore/global-infrastructure/products-by-region/table
# To ensure an up to date list, attempt to create the resources in a region which does not exist, and check the error message

ALLOWED_STORAGE_ACCOUNT_REGIONS: Final = frozenset(
    {
        "australiacentral",
        "australiaeast",
        "australiasoutheast",
        "brazilsouth",
        "canadacentral",
        "canadaeast",
        "centralindia",
        "centralus",
        "eastasia",
        "eastus",
        "eastus2",
        "francecentral",
        "germanywestcentral",
        "israelcentral",
        "italynorth",
        "japaneast",
        "japanwest",
        "jioindiawest",
        "koreacentral",
        "koreasouth",
        "mexicocentral",
        "newzealandnorth",
        "northcentralus",
        "northeurope",
        "norwayeast",
        "polandcentral",
        "qatarcentral",
        "southafricanorth",
        "southcentralus",
        "southeastasia",
        "southindia",
        "spaincentral",
        "swedencentral",
        "switzerlandnorth",
        "uaenorth",
        "uksouth",
        "ukwest",
        "westcentralus",
        "westeurope",
        "westindia",
        "westus",
        "westus2",
        "westus3",
    }
)

ALLOWED_CONTAINER_APP_REGIONS: Final = frozenset(
    {
        "australiaeast",
        "brazilsouth",
        "canadacentral",
        "canadaeast",
        "centralindia",
        "centralus",
        "eastasia",
        "eastus",
        "eastus2",
        "francecentral",
        "germanywestcentral",
        "italynorth",
        "japaneast",
        "koreacentral",
        "northcentralus",
        "northeurope",
        "norwayeast",
        "polandcentral",
        "southafricanorth",
        "southcentralus",
        "southeastasia",
        "southindia",
        "swedencentral",
        "switzerlandnorth",
        "uaenorth",
        "uksouth",
        "ukwest",
        "westcentralus",
        "westeurope",
        "westus",
        "westus2",
        "westus3",
    }
)
